@startuml
'https://plantuml.com/sequence-diagram

participant CCA as cca #lightgreen
database M3_DB as m3db
database InternalDB  as internal
collections File_Server as file

autoactivate on
autonumber

-> cca: submitJob\n    - facility\n    - brandCode\n    - <color:brown>m3CoNo</color>\n    - <color:peru>folderTimestamp</color>\n    - byUser\n    - isSystemJob
autoactivate off

== Validation input data ==

cca -> cca: Validate non empty path params\n
autoactivate on
cca -> internal: check exist entity [facility, m3Company: 100] in **TM_M3_FACILITY**
return
cca -> internal: check exist entity [brandCode] in **TM_M3_BRAND**
return

group checkM3CONo
    cca -> internal: find M3Facility entity [facility, m3Company: 100] in **TM_M3_FACILITY**
    return <color:blue>m3Facility</color>
    cca -> m3db: SELECT OACUNO, OAORST, **OAORSL** FROM OOHEAD A JOIN MITWHL B ON A.OAWHLO = B.MWWHLO \nWHERE OAORNO = :<color:blue>m3Facility</color>.OriginFacility AND B.MWFACI=:<color:brown>m3CoNo</color>;
    cca -> cca #hotpink: check OACUNO in range [20, 76]\n define <color:blue>m3COCustomer</color> = **OAORSL**
    deactivate cca
end

group checkM3Customer
    cca -> m3db: SELECT OKSTAT FROM {0}.OCUSMA WHERE OKCUNO=:<color:blue>m3COCustomer</color>
    return resultSets["OKSTAT"]
    cca -> cca #hotpink: check all resultSets["OKSTAT"] is M3_CUST_VALID_STATUS (**20**)
    deactivate cca
    cca -> m3db: Check exist SELECT 1 FROM {0}.OBTYPE WHERE  BOCUNO=<color:blue>m3COCustomer</color> AND BOBQLY=''A''
    return
end

== Download file order & submit job to background worker ==

group Get file name and create file in local server
    cca -> file: find sub-folders in folder "facility/brandCode/m3cono"
    return sub-folders
    autoactivate off
    cca -> cca: create sub-folders in local server
    cca -> cca: __**productTypeList**__ = all sub-folders in folder "facility/brandCode/m3cono/${<color:peru>folderTimestamp</color>}"
end

autoactivate on
loop #lightgreen for productType : __**productTypeList**__
    cca -> internal: SELECT * FROM TP_PO_FIELD_MAP \n WHERE programType = :programCode\nmap.product.code = :productCode\nmap.brand.code = :brandCode\nmap.facility =:facility
    return **header**

    cca -> internal: select aggr from MTMAggregate aggr where aggr.id.facility =:facility and aggr.id.programType = :programCode and aggr.id.productTypeCode = :productCode and aggr.id.brandCode = :brandCode
    return **aggregate**

    cca -> file: download folder "facility/brandCode/m3cono" in file server\n to local
    return **orderFileFolders**

    group submitMTMCOMaintenanceJob(header, aggregate, orderFileFolders, facility, <color:brown>m3CoNo</color>, <color:blue>m3COCustomer</color>, byUser, isSystemJob)
        cca -> internal: INSERT INTO **TC_M3_CO**
        return jobId

        autoactivate off
        cca -> cca: //**create jobDetail = [jobId, productType, fileList]**//
    end
end
cca -> cca: Submit job to job worker (Asynchronously)

... Run asynchronously in the background **See in job diagram** ...

@enduml