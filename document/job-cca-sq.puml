@startuml
'https://plantuml.com/sequence-diagram

participant CCA as cca #lightgreen
database M3_DB as m3db
database InternalDB  as internal
collections Local_File as file
participant M3 as m3 #lightblue

autoactivate on
autonumber

-> cca: jobs []
loop job : jobs
    cca -> internal: SELECT TC_M3_CO BY jobId
    return jobBean
    cca -> internal: UPDATE SET status, remark TC_M3_CO
    note right
        Update CO Job Upload Status to processing
    end note
    return

    == STEP1: Get the files ==
    cca -> internal: SELECT TC_CUST_PO_FILE_INFO WHERE m3CoUploadJobId = :jobId
    return folderList
    loop folder : folderList
        cca -> file: load file from folder
        return <color:blue>files</color>
    end

    == STEP2: Get the field mapping && SKU mapping ==
    cca -> internal: SELECT TP_PO_FIELD_MAP \n JOIN TP_PO_FIELD_MAP_DETAILS d ON m.PO_FIELD_MAP_ID = d.PO_FIELD_MAP_ID\n WHERE PO_FIELD_MAP_ID = :jobBean.mapId
    return fieldMapping

    == STEP3: Prepare fo mapping by sort out to Header and Line starts ==
    autoactivate off
    cca -> cca: partition by fieldMapping.getDetails is CO 'Header fields' or 'CO Line fields'
    autoactivate on

    == STEP4: Get content through fieldMapping per file ==
    loop #lightgreen file : <color:blue>files</color>
        cca -> file: Parse xml-file and 'Header fields' & 'CO Line fields'
        return mappedResult {headerFields, lineFields}

        cca -> internal: SELECT TU_MTM_SKU_MAP_ITEMS WHERE fieldMap.poFieldMapId = :fieldMapId AND orderStyleNo = :styleNo
        return skuMapItem
        cca -> internal: SELECT TU_MTM_SKU_MAP_DETAILS WHERE fieldMap.poFieldMapId = :fieldMapId
        return skuDetailMap[fieldMapId -> itself]

        autoactivate off

        loop #mistyrose line : lineFields
            cca -> cca: build rawCOLines
            note right
                rawCoLine.m3CoNo = m3CONo;
                rawCoLine.m3CoUploadJobId = jobId;
                ...
                set rawCoLine object properties
                ...
                rawCoLine.customerOrderFileId =
                rawCoLine.ItemNumber = skuMapItem.M3ItemNo

                === Case field `liability` = "TAP"
                    rawCoLine.Liability = "TAP"
                    rawCoLine.PriceTerm = "FOB"
                    rawCoLine.SalesPrice = <color:red>**See calculate calculateFobSalesPrice activity diagram**
                    rawCoLine.FobBasicPrice =  <color:red>**See calculate calculateFobSalesPrice activity diagram**
                === Case field `liability` = "BUYER"
                    rawCoLine.Liability = "BUYER"
                    rawCoLine.PriceTerm = "CMT"
                    rawCoLine.SalesPrice = skuMapItem.SalesPriceBase
                    rawCoLine.FobBasicPrice = skuMapItem.FobSalesPrice

                rawCoLine.CmtBasicPrice = skuMapItem.SalesPriceBase
                rawCoLine.UpchargeCost = skuDetailMap[M3FieldId].SalesPriceDelta
                rawCoLine.DiscountPrice = 0

                === If is bulk order
                rawCoLine.DiscountPrice = field "discount" value
                    **Case field `liability` = "TAP"**
                        rawCoLine.FobBasicPrice -= field "discount" value
                        rawCoLine.SalesPrice = rawCoLine.FobBasicPrice + rawCoLine.UpchargeCost
                    **Case field `liability` = "BUYER"**
                        rawCoLine.CmtBasicPrice -= field "discount" value
                        rawCoLine.SalesPrice = rawCoLine.CmtBasicPrice + rawCoLine.UpchargeCost
            end note
        end
    end

    == STEP6: validation header and lines ==
    cca -> cca: validateCOHeader & validateCOLines

    == STEP7: Get M3 Item No and Aggregate if needed ==
    cca -> cca: buildCODataBeanForMTM

    == STEP8: Populate 3 min field value from line to header ==
    cca -> cca: populateM3COHeaderDataFromLine

    == STEP9: Save the mapping result to DB ==
    cca -> database: INSERT **INTO TC_M3_CO_LINE_MTM_RAW**
    cca -> database: INSERT **INTO TC_M3_CO_HEADER_UPLOAD**
    cca -> database: UPDATE SET status **TC_M3_CO**
end

=== uploadCO===


@enduml